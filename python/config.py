import argparse
import json
import sys

from parsers.parser_factory import ConfigurationParserFactory
from utils import parse

METHOD_PARAMETER = "m"

FILE_NAME_PARAMETER = "fn"

DEFAULT_FILE_NAME = "config.txt"

configurationParserFactory = ConfigurationParserFactory()

parser = argparse.ArgumentParser(
    description='Tool for generating configurations for similarity calculators.' +
                ' Configurations generated by this tool are save in file specified in one of the params')

parser.add_argument('-m', help="Method config name. Must be one of: {}".format(
    configurationParserFactory.getSupportedMethods()))
parser.add_argument('-file', help="Name of the file that will be used to save generated configuration object. " +
                                  "Default value: {}".format(DEFAULT_FILE_NAME), default=DEFAULT_FILE_NAME)


def getConfigFilePath(rawConfig):
    return rawConfig.get(FILE_NAME_PARAMETER, DEFAULT_FILE_NAME)


def validateConfigMethod(rawConfig):
    print "Validating config method"
    if METHOD_PARAMETER not in rawConfig.keys():
        raise AttributeError(
            "No method defined! No argument" + METHOD_PARAMETER + " available. Supported methods " + str(
                configurationParserFactory.getSupportedMethods()))


def parseArgumentsToMethodConfig(rawArgumentsMap):
    print "Raw arguments: {}".format(rawArgumentsMap)
    validateConfigMethod(rawArgumentsMap)
    method = rawArguments[METHOD_PARAMETER]
    configParser = configurationParserFactory.getParser(method)
    parsedConfig = configParser.parse(rawArguments)
    print "Parsed config {}".format(parsedConfig)
    return parsedConfig


def saveToFile(config, filePath):
    with open(filePath, "a") as myfile:
        myfile.write(json.dumps(config) + "\n")


try:
    # Used only for displaying simple manual
    args = parser.parse_args()
    rawArguments = parse.parseArguments(sys.argv);
    configFile = getConfigFilePath(rawArguments)
    config = parseArgumentsToMethodConfig(rawArguments)
    saveToFile(config, configFile)
except AttributeError as error:
    print "ERROR OCCURED: " + error.message
